
mp9 grade report for pan30
================================

Latest handin (graded copy) was - on_time

*Regular Problems:
Grading script score  => [10 / 131]
Late Penalty          => 0
Point adjustments     => 0
Total                 => 10

*Extra Credit:
Grading script score for extra credit => [0 / 10]
Late Penalty for extra credit         => 0
Point adjustments for extra credit    => 0
Total extra credit                    => 0


mp9grader program output
---------------------


[0 / 1] parse "(*  Q1 *) val x = \"hi\";" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = true val x = 3 val x = 3.45;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = nil val x = ();" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q2 *) fst;" (student solution timed out / exception thrown)
[0 / 1] parse "          snd 1;" (student solution timed out / exception thrown)
[0 / 1] parse "          snd (tl (hd (~~ 1)));" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q3 *) val x = (3);" (student solution timed out / exception thrown)
[0 / 1] parse "          ((3));" (student solution timed out / exception thrown)
[0 / 1] parse "          ((2 + 3) * (4 / 5));" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q4 *) (3, 9);" (student solution timed out / exception thrown)
[0 / 1] parse "          ((2, 3), (2, true));" (student solution timed out / exception thrown)
[0 / 1] parse "          (((3), ((2))));" (student solution timed out / exception thrown)
[0 / 2] parse "          (1, \"hi\", (true, false), 4.0);" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q5 *) let val x = 3 in x end;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = let val x = let val y = true in 3 end in 4 end;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = let val x = 3 in let val y = 4 in 5 end end;" (student solution timed out / exception thrown)
[0 / 1] parse "          (\"hi\"; 3);" (student solution timed out / exception thrown)
[1 / 1] parse_fail "     (\"hi\"; true , 5);" (correct)
[1 / 1] parse_fail "     let val x = 3; 4 in 5 end;" (correct)
[0 / 2] parse "          val x = let val x = 3 in (let val y = 4 in 5; 6; 7 end ; true; false) end;" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q6 *) val x = [1, 2, 3];" (student solution timed out / exception thrown)
[0 / 1] parse "          [];" (student solution timed out / exception thrown)
[0 / 1] parse "          [false];" (student solution timed out / exception thrown)
[0 / 1] parse "          [[1, 2], (fn x => x), [[]]];" (student solution timed out / exception thrown)
[1 / 1] parse_fail "     [1; 3];" (correct)
[0 / 1] parse "(*  Q7 *) true orelse false;" (student solution timed out / exception thrown)
[0 / 1] parse "         true andalso (false orelse 2) andalso 5;" (student solution timed out / exception thrown)
[0 / 1] parse "         true orelse true andalso x;" (student solution timed out / exception thrown)
[0 / 2] parse "         true andalso false andalso true andalso false orelse true orelse false orelse true;" (student solution timed out / exception thrown)
[0 / 1] parse "(*  Q8 *) \"a\" < \"b\";" (student solution timed out / exception thrown)
[0 / 1] parse "          3 > 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 >= 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 <= 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 <> 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 = 4;" (student solution timed out / exception thrown)
[0 / 2] parse "          3 = 2 = 4;" (student solution timed out / exception thrown)
[0 / 2] parse "          3 = 2 <> 1 > 2 = 6 > 7 < 8;" (student solution timed out / exception thrown)
[0 / 2] parse "          true orelse 3 > 4 andalso 4 < 5 < 6 + 2;" (student solution timed out / exception thrown)
[0 / 2] parse "(*  Q9 *) 3 :: 2 :: 1 :: nil;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 :: 2;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 :: [];" (student solution timed out / exception thrown)
[0 / 1] parse "          nil :: (nil :: nil) :: nil;" (student solution timed out / exception thrown)
[0 / 3] parse "          3 :: 5 :: (2.0, 4) :: [1,3];" (student solution timed out / exception thrown)
[0 / 2] parse "          4 + 3.0 :: (2 > 5);" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q10 *) 3 + 4 * 2;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 - 4 - 2 * 9 > 10 andalso true;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 - 2 - 1 + 4 + 5 + 6;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 *. 2.0 -. 1.6 *. 4 /. 2.0 +. 4.13 ;" (student solution timed out / exception thrown)
[0 / 1] parse "          3 * 2 - 4 * 5 + 3 * 10 + 32;" (student solution timed out / exception thrown)
[0 / 1] parse "          \"hi\" ^ \"gh\" ^ \"er\";" (student solution timed out / exception thrown)
[0 / 1] parse "          3 / 4 * 5.1 /. 6 +. (3.3 -. 2) *. false;" (student solution timed out / exception thrown)
[0 / 1] parse "          ( 3 + (1 - 7) , 3 *. (2.0 -. 1.6));" (student solution timed out / exception thrown)
[0 / 2] parse "          val x = 3+2 < 3+5;" (student solution timed out / exception thrown)
[0 / 2] parse "          3 >= 4 andalso 3 * false > 2.2 orelse 4 *. f;" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q11 *) hd nil;" (student solution timed out / exception thrown)
[0 / 1] parse "         hd(tl (3::2::[]));" (student solution timed out / exception thrown)
[0 / 2] parse "         hd tl (3::2::[]);" (student solution timed out / exception thrown)
[0 / 1] parse "         (fn x => x) 3;" (student solution timed out / exception thrown)
[0 / 1] parse "         1 raise 2;" (student solution timed out / exception thrown)
[0 / 2] parse "         2 > 3 andalso 4 < 5;" (student solution timed out / exception thrown)
[0 / 2] parse "         ~~ hd tl tl [1,2,3];" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q12 *) op +;" (student solution timed out / exception thrown)
[0 / 2] parse "          op >=;" (student solution timed out / exception thrown)
[1 / 1] parse_fail "     op ~;" (correct)
[1 / 1] parse_fail "     op 2;" (correct)
[0 / 1] parse "(* Q13 *) fn x => if x then 3 else raise 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          if true then 1 else 0 + 2;" (student solution timed out / exception thrown)
[0 / 2] parse "          2 * if true then 1 else 0 + raise 2;" (student solution timed out / exception thrown)
[0 / 1] parse "          (fn x => ()) 2;" (student solution timed out / exception thrown)
[0 / 1] parse "          raise 3;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = fn x => 1;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = fn x => fn y => fn z => 2;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = if true then 2 else 3;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = if false then fn x => 3 else 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          val x = fn x => if true then 2 else 3;" (student solution timed out / exception thrown)
[0 / 1] parse "          val rec x a = fn a => fn b => fn a => a b;" (student solution timed out / exception thrown)
[0 / 2] parse "          raise ~ hd tl [1,2];" (student solution timed out / exception thrown)
[0 / 3] parse "          3 + 4 raise f 4;" (student solution timed out / exception thrown)
[0 / 3] parse "          val x = if true then fn y => 33 else fn x => raise if 10 then 11 else 22;" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q14 *) val _ = \"hi\";" (student solution timed out / exception thrown)
[0 / 1] parse "          let val _ = true in 5 end;" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q15 *) local val x = 2 in val y = x + 3 end;" (student solution timed out / exception thrown)
[0 / 1] parse "          local val x = 2 in local val x = 2 in val y = x + 3 end end;" (student solution timed out / exception thrown)
[0 / 1] parse "          local local val x = 2 in val y = x + 3 end in val y = x + 3 end;" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q16 *) val rec f g = g 5;" (student solution timed out / exception thrown)
[0 / 1] parse "          val rec f x = 1;" (student solution timed out / exception thrown)
[0 / 1] parse "          val rec f a b c d e f = a + b + c + d + e + f;" (student solution timed out / exception thrown)
[0 / 2] parse "          val rec f a a a a = fn x => x + a;" (student solution timed out / exception thrown)
[1 / 1] parse_fail "     val rec _ = 1;" (correct)
[0 / 2] parse "          val rec f x = (fn y => 2 + y) 2;" (student solution timed out / exception thrown)
[0 / 2] parse "          val rec f a a a a = (((fn x => fn y => fn z => x + y + z +x + a) 2 ) 3) 4;" (student solution timed out / exception thrown)
[0 / 1] parse "(* Q17 *) fun f x a b c d a b c d = fn y => fn f => f x;" (student solution timed out / exception thrown)
[0 / 1] parse "          fun f x = x;" (student solution timed out / exception thrown)
[0 / 2] parse "          fun f x y z x = x;" (student solution timed out / exception thrown)
[0 / 3] parse "          fun f x = fn g => fn x => fn g => fn a => fn f => fn b => fn h => fn b => (f g) b;" (student solution timed out / exception thrown)
[0 / 2] parse "          fun f x = (fn y => if y then true else g y);" (student solution timed out / exception thrown)
[2 / 2] parse_fail "     fun f 2 = g x;" (correct)
[2 / 2] parse_fail "     fun f = g x;" (correct)
[0 / 2] parse_fail "     fun f x = (fn y => if y then true else g y) false;" (student solution returns an incorrect value)

[0 / 1] parse "(* Q18 *) \"hi\" handle 1 => \"one\" | 2 => \"two\";" (student solution timed out / exception thrown)
[0 / 1] parse "          true handle 4 => false | _ => true;" (student solution timed out / exception thrown)
[0 / 1] parse "          true handle 4 => false | _ => true | _ => 10;" (student solution timed out / exception thrown)
[0 / 1] parse "          fn x => 4 handle 4 => 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          if true then 2 else 3 handle 3 => 4;" (student solution timed out / exception thrown)
[0 / 1] parse "          \"hi\" handle 1 => \"one\" | 2 => \"hello\" handle 3 => \"three\" | 4 => \"four\";" (student solution timed out / exception thrown)
[0 / 1] parse "          true handle 4 => false | _ => true | 5 => 2 + if true then false else true;" (student solution timed out / exception thrown)
[0 / 1] parse "          5 ; \"hi\" handle 3 => 5 ; 6 | 7 => \"b\";" (student solution timed out / exception thrown)
[0 / 2] parse "          1 + 1 handle 4 => 3 * 2 | 1 => raise 2;" (student solution timed out / exception thrown)
Total: [10 / 131]
Extra: [0 / 10]

Additional outout from compiling students code (may be empty)
----------------------------------------------------


   0  $accept : %entry% $end

   1  main : expression SEMI
   2       | dec SEMI

   3  dec : atomic_dec
   4      | dec atomic_dec

   5  atomic_dec : VAL simp_bind

   6  simp_bind :

   7  expression :

   8  %entry% : '\001' main

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . main  (8)
	expression : .  (7)

	VAL  shift 3
	SEMI  reduce 7

	main  goto 4
	expression  goto 5
	dec  goto 6
	atomic_dec  goto 7


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	atomic_dec : VAL . simp_bind  (5)
	simp_bind : .  (6)

	.  reduce 6

	simp_bind  goto 8


state 4
	%entry% : '\001' main .  (8)

	.  reduce 8


state 5
	main : expression . SEMI  (1)

	SEMI  shift 9
	.  error


state 6
	main : dec . SEMI  (2)
	dec : dec . atomic_dec  (4)

	SEMI  shift 10
	VAL  shift 3
	.  error

	atomic_dec  goto 11


state 7
	dec : atomic_dec .  (3)

	.  reduce 3


state 8
	atomic_dec : VAL simp_bind .  (5)

	.  reduce 5


state 9
	main : expression SEMI .  (1)

	.  reduce 1


state 10
	main : dec SEMI .  (2)

	.  reduce 2


state 11
	dec : dec atomic_dec .  (4)

	.  reduce 4


65 terminals, 7 nonterminals
9 grammar rules, 12 states

Student's code (with comments and point adjustments)
----------------------------------------------------


%{
    open Mp9common
(* add any extra code here *)

%}

/* Define the tokens of the language: */
%token <int> INT
%token <float> REAL
%token <bool> BOOL
%token <string> STRING IDENT
%token <(int*int)> OPCOM CLCOM
%token NEG PLUS MINUS TIMES DIV DPLUS DMINUS DTIMES DDIV CARAT LT GT LEQ GEQ
       EQUALS NEQ PIPE ARROW SEMI DCOLON AT NIL LET LOCAL VAL REC AND END IN
       IF THEN ELSE FUN FN OP MOD RAISE HANDLE WITH NOT ANDALSO ORELSE
       HD TL FST SND
       LBRAC RBRAC LPAREN RPAREN COMMA UNDERSCORE
       UNIT ERROR EOF

/* Define the "goal" nonterminal of the grammar: */
%start main
%type <Mp9common.dec> main

%%

main:
    expression SEMI                             { Val("it", $1) }
  | dec SEMI                                    { $1 }

dec:
    atomic_dec                                  { $1 }
  | dec atomic_dec                              { Seq($1, $2) }

atomic_dec:
    VAL simp_bind                               { Val (fst $2, snd $2) }
    /* You will work here */

simp_bind: 
	{ ("", VarExp "")  } /* This line is used only to have a working compilation. It is wrong -- remove it and work from here */

expression: 
	{ VarExp "" } /* This line is used only to have a working compilation. It is wrong -- remove it and work from here */

Stdout
----------------------------------------------------


